{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/Brand/Brand.jsx","App.js","index.js","components/Brand/Brand.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CircularProgress","url","fetchData","country","a","d_url","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchApiData","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","countryChangeHandler","setCountries","fetchApi","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","Brand","covidimg","src","alt","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5196b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2lcPY\",\"card\":\"Cards_card__aox0F\",\"infected\":\"Cards_infected__1pmNu\",\"recovered\":\"Cards_recovered__mEf6u\",\"deaths\":\"Cards_deaths__1_uA-\"};","import React from \"react\";\nimport { Grid, Card, CardContent, Typography, CircularProgress } from '@material-ui/core';\nimport styles from '../Cards/Cards.module.css';\nimport cx from 'classnames';\nimport CountUp from 'react-countup'; \n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n\tif(!confirmed){\n\t\treturn <CircularProgress />\n\t}\n\n\treturn ( \n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} className={cx(styles.card, styles.infected)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid-19.mathdro.id/api';\r\nconst daily_url = 'https://covid19.mathdro.id/api/daily';\r\n\r\nexport const fetchData = async (country) => {\r\n    try{\r\n        let d_url = url;\r\n        if(country)\r\n        {\r\n            d_url = `${url}/countries/${country}`;\r\n        }\r\n        const { data:{ confirmed, recovered, deaths, lastUpdate } } = await axios.get(d_url);\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(daily_url);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data : { countries } } = await axios(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';  \nimport styles from './Charts.module.css';\n\nconst Charts = ({ data : {confirmed, recovered, deaths} , country }) => {\n\n\tconst [dailyData, setDailyData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchApiData = async () => {\n\t\t\tsetDailyData(await fetchDailyData());\n\t\t}\n\n\t\tfetchApiData();\n\t});\n\n\tconst lineChart = (\n\t\tdailyData.length ? (\n\t\t\t<Line \n\t\t\t\tdata = {{\n\t\t\t\t\tlabels : dailyData.map(({date})=>date),\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tdata : dailyData.map(({confirmed})=>confirmed),\n\t\t\t\t\t\tlabel : 'Infected',\n\t\t\t\t\t\tborderColor: 'rgba(0, 0, 255, 1)',\n\t\t\t\t\t\tfill : true\n\t\t\t\t\t},{\n\t\t\t\t\t\tdata : dailyData.map(({deaths})=>deaths),\n\t\t\t\t\t\tlabel : 'Deaths',\n\t\t\t\t\t\tborderColor: 'rgba(255, 0, 0, 1)',\n\t\t\t\t\t\tfill : true\n\t\t\t\t\t}]\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null\n\t);\n\t\n\tconst barChart = (\n\t\tconfirmed ? (\n\t\t\t<Bar \n\t\t\t\tdata = {{\n\t\t\t\t\tlabels : ['Infected', 'Recovered', 'Deaths'],\n\t\t\t\t\tdatasets : [{\n\t\t\t\t\t\tlabel : 'People',\n\t\t\t\t\t\tbackgroundColor : [\n\t\t\t\t\t\t\t'rgba(0, 0, 255, .5)',\n\t\t\t\t\t\t\t'rgba(0, 255, 0, .5)',\n\t\t\t\t\t\t\t'rgba(255, 0, 0, .5)'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdata : [confirmed.value, recovered.value, deaths.value]\n\t\t\t\t\t}]\n\t\t\t\t}}\n\t\t\t\toptions = {{\n\t\t\t\t\tlegend : { display : false },\n\t\t\t\t\ttitle : { display : true , text : `Current state in ${country}`}\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null\n\t)\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{ country ? barChart : lineChart }\n\t\t</div>\n\t)\n}\n\nexport default Charts;","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ( { countryChangeHandler } ) => {\n\n\tconst [countries, setCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchApi = async () => {\n\t\t\tsetCountries(await fetchCountries());\n\t\t}\n\n\t\tfetchApi();\n\t}, []);\n\n\treturn (\n\t\t<FormControl className={styles.formControl}>\n\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => countryChangeHandler(e.target.value)}\t>\n\t\t\t\t<option value=\"\">Global</option>\n\t\t\t\t{\n\t\t\t\t\tcountries.map((country, i) => <option key={i} value={ country }>{ country }</option>)\n\t\t\t\t}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t)\n}\n\nexport default CountryPicker;","import React from \"react\";\r\nimport styles from './Brand.module.css';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Brand = () => {\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n            <Typography variant=\"h2\" component=\"h3\">\r\n             C<img className={styles.covidimg} src=\"https://cutt.ly/ehEsot3\" alt=\"covid-19\"/>VID-19\r\n            </Typography>\r\n        </div>\r\n\t)\r\n}\r\n\r\nexport default Brand;","import React from 'react';\nimport { Cards, Charts, CountryPicker, Brand } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nclass App extends React.Component{\n\n  state = {\n    data : {},\n    country : ''\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data : fetchedData});\n  }\n\n  countryChangeHandler = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data : fetchedData, country: country});\n  }\n\n  render()\n  {\n    const {data, country} = this.state;\n\n    return (\n      data ? (\n      <div className={styles.container}>\n        <Brand />\n        <Cards data={ data }/>\n        <CountryPicker countryChangeHandler = { this.countryChangeHandler }/>\n        <Charts data={ data } country={ country } />\n      </div> ) : 'Please check your network connection!'\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Brand_container__2BLwt\",\"covidimg\":\"Brand_covidimg__3XD-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1rBfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1N8Ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__27ql0\"};"],"sourceRoot":""}